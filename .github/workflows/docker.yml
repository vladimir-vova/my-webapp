name: Build, Push and Deploy

on:
  push:
    branches: [ main, master ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/my-webapp:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/my-webapp:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push  # –ñ–¥–µ—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–±–æ—Ä–∫–∏

    steps:
    - name: Deploy to production server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          echo "üöÄ Starting deployment..."
          
          # –õ–æ–≥–∏–Ω–∏–º—Å—è –≤ Docker Hub
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          
          # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          sudo docker stop my-webapp-container || true
          sudo docker rm my-webapp-container || true
          
          # Pull –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±—Ä–∞–∑–∞
          sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-webapp:latest
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
          sudo docker run -d \
            --name my-webapp-container \
            -p 80:80 \
            --restart unless-stopped \
            ${{ secrets.DOCKERHUB_USERNAME }}/my-webapp:latest
          
          echo "‚úÖ Deployment completed successfully!"
          echo "üåê Application available at: http://${{ secrets.SERVER_IP }}"
          
          # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
          sudo docker image prune -af